// Generated by view binder compiler. Do not edit!
package com.lutech.flashlight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lutech.flashlight.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogUpdateVersionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final TextView btnDoLater;

  @NonNull
  public final TextView btnGotoStore;

  @NonNull
  public final ImageView imvCancle;

  @NonNull
  public final TextView tvTitle;

  private DialogUpdateVersionBinding(@NonNull RelativeLayout rootView, @NonNull ImageView btnBack,
      @NonNull TextView btnDoLater, @NonNull TextView btnGotoStore, @NonNull ImageView imvCancle,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnDoLater = btnDoLater;
    this.btnGotoStore = btnGotoStore;
    this.imvCancle = imvCancle;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogUpdateVersionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogUpdateVersionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_update_version, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogUpdateVersionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnDoLater;
      TextView btnDoLater = ViewBindings.findChildViewById(rootView, id);
      if (btnDoLater == null) {
        break missingId;
      }

      id = R.id.btnGotoStore;
      TextView btnGotoStore = ViewBindings.findChildViewById(rootView, id);
      if (btnGotoStore == null) {
        break missingId;
      }

      id = R.id.imv_cancle;
      ImageView imvCancle = ViewBindings.findChildViewById(rootView, id);
      if (imvCancle == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new DialogUpdateVersionBinding((RelativeLayout) rootView, btnBack, btnDoLater,
          btnGotoStore, imvCancle, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
