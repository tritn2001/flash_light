// Generated by view binder compiler. Do not edit!
package com.lutech.flashlight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lutech.flashlight.R;
import com.lutech.flashlight.ads.TemplateView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFlashAlertBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout ftTurnOnComingCall;

  @NonNull
  public final LinearLayout ftTurnOnNoti;

  @NonNull
  public final LinearLayout ftTurnOnSms;

  @NonNull
  public final LinearLayout layoutHead;

  @NonNull
  public final TemplateView myTemplate;

  @NonNull
  public final SwitchCompat switchOnOff;

  @NonNull
  public final TextView tvStatus;

  private FragmentFlashAlertBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout ftTurnOnComingCall, @NonNull LinearLayout ftTurnOnNoti,
      @NonNull LinearLayout ftTurnOnSms, @NonNull LinearLayout layoutHead,
      @NonNull TemplateView myTemplate, @NonNull SwitchCompat switchOnOff,
      @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.ftTurnOnComingCall = ftTurnOnComingCall;
    this.ftTurnOnNoti = ftTurnOnNoti;
    this.ftTurnOnSms = ftTurnOnSms;
    this.layoutHead = layoutHead;
    this.myTemplate = myTemplate;
    this.switchOnOff = switchOnOff;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFlashAlertBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFlashAlertBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_flash_alert, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFlashAlertBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ftTurnOnComingCall;
      LinearLayout ftTurnOnComingCall = ViewBindings.findChildViewById(rootView, id);
      if (ftTurnOnComingCall == null) {
        break missingId;
      }

      id = R.id.ftTurnOnNoti;
      LinearLayout ftTurnOnNoti = ViewBindings.findChildViewById(rootView, id);
      if (ftTurnOnNoti == null) {
        break missingId;
      }

      id = R.id.ftTurnOnSms;
      LinearLayout ftTurnOnSms = ViewBindings.findChildViewById(rootView, id);
      if (ftTurnOnSms == null) {
        break missingId;
      }

      id = R.id.layout_head;
      LinearLayout layoutHead = ViewBindings.findChildViewById(rootView, id);
      if (layoutHead == null) {
        break missingId;
      }

      id = R.id.myTemplate;
      TemplateView myTemplate = ViewBindings.findChildViewById(rootView, id);
      if (myTemplate == null) {
        break missingId;
      }

      id = R.id.switchOnOff;
      SwitchCompat switchOnOff = ViewBindings.findChildViewById(rootView, id);
      if (switchOnOff == null) {
        break missingId;
      }

      id = R.id.tvStatus;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      return new FragmentFlashAlertBinding((ConstraintLayout) rootView, ftTurnOnComingCall,
          ftTurnOnNoti, ftTurnOnSms, layoutHead, myTemplate, switchOnOff, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
